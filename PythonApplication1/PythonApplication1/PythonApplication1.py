#from __future__ import print_function
from queue import PriorityQueue
import os
import time
from ortools.constraint_solver import routing_enums_pb2
from ortools.constraint_solver import pywrapcp



def modelo_datos(x, d):
    datos = {}
    datos['matriz_aristas'] = d 
    datos['c1'] = 1
    datos['inicial'] = x-1
    return datos
def imprimir_ruta(manager, ruta, solucion):
    print('Costo Pasaje: {} Euros'.format(solucion.ObjectiveValue()))
    indice = ruta.Start(0)
    cola=[]
    while not ruta.IsEnd(indice):
        x=manager.IndexToNode(indice)+1
        cola.append(x)
        previous_index = indice
        indice = solucion.Value(ruta.NextVar(indice))
    z=manager.IndexToNode(indice)+1
    cola.append(z)
    
    i=1
    print("La ruta escogida fue: ")
    while(len(cola)!=0):
        print(i,end= ". ",)
        print(buscarNombre(cola.pop()),end= " -> ",)
        if(i%5 == 0):
            print("")
        i+=1

def recorridocompleto(d):
    print("Escoga ciudad de partida: ", end="", )
    x=-1
    while(x==-1):
        x=devuelveIndice(input())
        if(x!=-1):
            print("Encontrado")
            print("")
        else:
            print("No se encontrÃ³ el Aeropuerto, Vuelva a ingresarlo: ")
    
    datos = modelo_datos(x, d)

    manager = pywrapcp.RoutingIndexManager(len(datos['matriz_aristas']),
                                           datos['c1'], datos['inicial'])

    ruta = pywrapcp.RoutingModel(manager)


    def distancia_nodos(from_index, to_index):
        desde = manager.IndexToNode(from_index)
        hasta = manager.IndexToNode(to_index)
        return datos['matriz_aristas'][desde][hasta]

    transit_callback_index = ruta.RegisterTransitCallback(distancia_nodos)

    ruta.SetArcCostEvaluatorOfAllVehicles(transit_callback_index)

    # SoluciÃ³n heuristica
    buscar_parametros = pywrapcp.DefaultRoutingSearchParameters()
    buscar_parametros.first_solution_strategy = (
        routing_enums_pb2.FirstSolutionStrategy.PATH_CHEAPEST_ARC)

    solucion = ruta.SolveWithParameters(buscar_parametros)

    if solucion:
        imprimir_ruta(manager, ruta, solucion)
        
def dijkstra(G, src, des):

    dist = [(268435456)] * len(G) 
    Q = PriorityQueue()  
    dist[src] = 0  
    Q.put((0, src))

    while (Q.empty() == False): 
        cost, u = Q.get()  

        if (u == des):
            sucesores(G, dist, src, des)
            return dist[des]  

        for v, Cost in G[u]:  # take all node which is adjacency with u node
            if (dist[v] > cost + Cost):  # if present dist greater than to dist[u]+Cost
                dist[v] = cost + Cost  # if u to v is minimum then update dist[v]
                Q.put((dist[v], v))  # push v into Queue
    return -1  

def sucesores (G, dist, src, des):
    pila = [des]
    distancia = dist[des]
    temp = 0

    while (distancia != 0):
        for v, Cost in G[des]:
            temp = distancia - Cost
            if(temp == dist[v]):
                pila.append(v)
                break
        distancia = distancia-Cost
        des=v

    for i in range (1, len(pila)):
            print (buscarNombre(pila.pop()), end= "-",)

    print(buscarNombre(pila.pop()))

def MasComun(G, cant):
    q=PriorityQueue()
    pila=[]
    for u in range (1, len(G)):
        q.put((len(G[u]), u))

    for i in range (1, len(G)):
        pila.append(q.get())

    for i in range (cant):
        print(pila.pop())
def matriz_adjacencia(G):
    d=[]

    for u in range (len(G)):
        i = 1
        d.append([])
        for v, cost in G[u]:
            if (i == u):
                d[u-1].append(int(0))
            d[u-1].append(cost)
            i=i+1
    d[u-1].append(0)
    d.pop()
    return d
def datosTiempo():
    a = []
    a.append([1, 2, 36])
    a.append([1, 3, 138])
    a.append([1, 4, 109])
    a.append([1, 5, 98])
    a.append([1, 6, 70])
    a.append([1, 7, 77])
    a.append([1, 8, 125])
    a.append([1, 9, 59])
    a.append([1, 10, 112])
    a.append([1, 11, 143])
    a.append([1, 12, 132])
    a.append([1, 13, 63])
    a.append([1, 14, 52])
    a.append([1, 15, 63])
    a.append([1, 16, 199])
    a.append([1, 17, 230])
    a.append([1, 18, 296])
    a.append([1, 19, 253])
    a.append([1, 20, 237])
    a.append([1, 21, 222])
    a.append([1, 22, 166])
    a.append([1, 23, 281])
    a.append([1, 24, 210])
    a.append([1, 25, 155])
    a.append([1, 26, 216])
    a.append([1, 27, 263])
    a.append([1, 28, 255])
    a.append([1, 29, 198])
    a.append([1, 30, 285])
    a.append([1, 31, 156])
    a.append([1, 32, 268])
    a.append([1, 33, 291])
    a.append([1, 34, 251])
    a.append([1, 35, 303])
    a.append([1, 36, 318])
    a.append([2, 3, 59])
    a.append([2, 4, 93])
    a.append([2, 5, 97])
    a.append([2, 6, 61])
    a.append([2, 7, 50])
    a.append([2, 8, 98])
    a.append([2, 9, 88])
    a.append([2, 10, 89])
    a.append([2, 11, 140])
    a.append([2, 12, 143])
    a.append([2, 13, 149])
    a.append([2, 14, 131])
    a.append([2, 15, 130])
    a.append([2, 16, 87])
    a.append([2, 17, 162])
    a.append([2, 18, 175])
    a.append([2, 19, 261])
    a.append([2, 20, 313])
    a.append([2, 21, 196])
    a.append([2, 22, 287])
    a.append([2, 23, 287])
    a.append([2, 24, 285])
    a.append([2, 25, 294])
    a.append([2, 26, 282])
    a.append([2, 27, 326])
    a.append([2, 28, 219])
    a.append([2, 29, 174])
    a.append([2, 30, 333])
    a.append([2, 31, 281])
    a.append([2, 32, 263])
    a.append([2, 33, 313])
    a.append([2, 34, 237])
    a.append([2, 35, 343])
    a.append([2, 36, 239])
    a.append([3, 4, 121])
    a.append([3, 5, 78])
    a.append([3, 6, 120])
    a.append([3, 7, 78])
    a.append([3, 8, 110])
    a.append([3, 9, 56])
    a.append([3, 10, 69])
    a.append([3, 11, 130])
    a.append([3, 12, 108])
    a.append([3, 13, 87])
    a.append([3, 14, 61])
    a.append([3, 15, 100])
    a.append([3, 16, 136])
    a.append([3, 17, 94])
    a.append([3, 18, 223])
    a.append([3, 19, 229])
    a.append([3, 20, 295])
    a.append([3, 21, 309])
    a.append([3, 22, 253])
    a.append([3, 23, 249])
    a.append([3, 24, 327])
    a.append([3, 25, 158])
    a.append([3, 26, 347])
    a.append([3, 27, 333])
    a.append([3, 28, 159])
    a.append([3, 29, 317])
    a.append([3, 30, 281])
    a.append([3, 31, 298])
    a.append([3, 32, 278])
    a.append([3, 33, 343])
    a.append([3, 34, 254])
    a.append([3, 35, 302])
    a.append([3, 36, 349])
    a.append([4, 5, 99])
    a.append([4, 6, 87])
    a.append([4, 7, 91])
    a.append([4, 8, 74])
    a.append([4, 9, 139])
    a.append([4, 10, 101])
    a.append([4, 11, 59])
    a.append([4, 12, 133])
    a.append([4, 13, 144])
    a.append([4, 14, 100])
    a.append([4, 15, 100])
    a.append([4, 16, 58])
    a.append([4, 17, 110])
    a.append([4, 18, 139])
    a.append([4, 19, 244])
    a.append([4, 20, 266])
    a.append([4, 21, 213])
    a.append([4, 22, 334])
    a.append([4, 23, 258])
    a.append([4, 24, 192])
    a.append([4, 25, 326])
    a.append([4, 26, 174])
    a.append([4, 27, 266])
    a.append([4, 28, 291])
    a.append([4, 29, 244])
    a.append([4, 30, 190])
    a.append([4, 31, 291])
    a.append([4, 32, 303])
    a.append([4, 33, 287])
    a.append([4, 34, 198])
    a.append([4, 35, 329])
    a.append([4, 36, 300])
    a.append([5, 6, 51])
    a.append([5, 7, 61])
    a.append([5, 8, 146])
    a.append([5, 9, 105])
    a.append([5, 10, 122])
    a.append([5, 11, 106])
    a.append([5, 12, 108])
    a.append([5, 13, 95])
    a.append([5, 14, 68])
    a.append([5, 15, 61])
    a.append([5, 16, 102])
    a.append([5, 17, 130])
    a.append([5, 18, 82])
    a.append([5, 19, 101])
    a.append([5, 20, 268])
    a.append([5, 21, 307])
    a.append([5, 22, 273])
    a.append([5, 23, 278])
    a.append([5, 24, 348])
    a.append([5, 25, 198])
    a.append([5, 26, 218])
    a.append([5, 27, 216])
    a.append([5, 28, 340])
    a.append([5, 29, 168])
    a.append([5, 30, 318])
    a.append([5, 31, 212])
    a.append([5, 32, 157])
    a.append([5, 33, 318])
    a.append([5, 34, 172])
    a.append([5, 35, 156])
    a.append([5, 36, 307])
    a.append([6, 7, 132])
    a.append([6, 8, 91])
    a.append([6, 9, 119])
    a.append([6, 10, 135])
    a.append([6, 11, 126])
    a.append([6, 12, 92])
    a.append([6, 13, 122])
    a.append([6, 14, 114])
    a.append([6, 15, 121])
    a.append([6, 16, 75])
    a.append([6, 17, 125])
    a.append([6, 18, 146])
    a.append([6, 19, 66])
    a.append([6, 20, 101])
    a.append([6, 21, 227])
    a.append([6, 22, 285])
    a.append([6, 23, 230])
    a.append([6, 24, 224])
    a.append([6, 25, 229])
    a.append([6, 26, 173])
    a.append([6, 27, 186])
    a.append([6, 28, 281])
    a.append([6, 29, 232])
    a.append([6, 30, 214])
    a.append([6, 31, 214])
    a.append([6, 32, 290])
    a.append([6, 33, 334])
    a.append([6, 34, 159])
    a.append([6, 35, 306])
    a.append([6, 36, 226])
    a.append([7, 8, 81])
    a.append([7, 9, 142])
    a.append([7, 10, 144])
    a.append([7, 11, 132])
    a.append([7, 12, 63])
    a.append([7, 13, 141])
    a.append([7, 14, 51])
    a.append([7, 15, 67])
    a.append([7, 16, 58])
    a.append([7, 17, 116])
    a.append([7, 18, 96])
    a.append([7, 19, 59])
    a.append([7, 20, 91])
    a.append([7, 21, 60])
    a.append([7, 22, 312])
    a.append([7, 23, 339])
    a.append([7, 24, 287])
    a.append([7, 25, 245])
    a.append([7, 26, 295])
    a.append([7, 27, 277])
    a.append([7, 28, 191])
    a.append([7, 29, 287])
    a.append([7, 30, 332])
    a.append([7, 31, 150])
    a.append([7, 32, 210])
    a.append([7, 33, 325])
    a.append([7, 34, 183])
    a.append([7, 35, 232])
    a.append([7, 36, 254])
    a.append([8, 9, 94])
    a.append([8, 10, 74])
    a.append([8, 11, 128])
    a.append([8, 12, 124])
    a.append([8, 13, 131])
    a.append([8, 14, 103])
    a.append([8, 15, 64])
    a.append([8, 16, 84])
    a.append([8, 17, 51])
    a.append([8, 18, 80])
    a.append([8, 19, 85])
    a.append([8, 20, 129])
    a.append([8, 21, 51])
    a.append([8, 22, 137])
    a.append([8, 23, 307])
    a.append([8, 24, 282])
    a.append([8, 25, 289])
    a.append([8, 26, 325])
    a.append([8, 27, 193])
    a.append([8, 28, 286])
    a.append([8, 29, 206])
    a.append([8, 30, 295])
    a.append([8, 31, 160])
    a.append([8, 32, 187])
    a.append([8, 33, 267])
    a.append([8, 34, 290])
    a.append([8, 35, 296])
    a.append([8, 36, 248])
    a.append([9, 10, 127])
    a.append([9, 11, 125])
    a.append([9, 12, 145])
    a.append([9, 13, 54])
    a.append([9, 14, 91])
    a.append([9, 15, 98])
    a.append([9, 16, 125])
    a.append([9, 17, 133])
    a.append([9, 18, 118])
    a.append([9, 19, 81])
    a.append([9, 20, 70])
    a.append([9, 21, 132])
    a.append([9, 22, 140])
    a.append([9, 23, 69])
    a.append([9, 24, 223])
    a.append([9, 25, 276])
    a.append([9, 26, 203])
    a.append([9, 27, 246])
    a.append([9, 28, 310])
    a.append([9, 29, 209])
    a.append([9, 30, 154])
    a.append([9, 31, 289])
    a.append([9, 32, 299])
    a.append([9, 33, 342])
    a.append([9, 34, 204])
    a.append([9, 35, 177])
    a.append([9, 36, 242])
    a.append([10, 11, 63])
    a.append([10, 12, 125])
    a.append([10, 13, 146])
    a.append([10, 14, 52])
    a.append([10, 15, 143])
    a.append([10, 16, 90])
    a.append([10, 17, 97])
    a.append([10, 18, 77])
    a.append([10, 19, 135])
    a.append([10, 20, 75])
    a.append([10, 21, 55])
    a.append([10, 22, 90])
    a.append([10, 23, 135])
    a.append([10, 24, 51])
    a.append([10, 25, 154])
    a.append([10, 26, 178])
    a.append([10, 27, 211])
    a.append([10, 28, 251])
    a.append([10, 29, 313])
    a.append([10, 30, 317])
    a.append([10, 31, 234])
    a.append([10, 32, 287])
    a.append([10, 33, 184])
    a.append([10, 34, 216])
    a.append([10, 35, 292])
    a.append([10, 36, 175])
    a.append([11, 12, 145])
    a.append([11, 13, 74])
    a.append([11, 14, 50])
    a.append([11, 15, 63])
    a.append([11, 16, 63])
    a.append([11, 17, 122])
    a.append([11, 18, 140])
    a.append([11, 19, 81])
    a.append([11, 20, 120])
    a.append([11, 21, 88])
    a.append([11, 22, 75])
    a.append([11, 23, 105])
    a.append([11, 24, 72])
    a.append([11, 25, 147])
    a.append([11, 26, 295])
    a.append([11, 27, 183])
    a.append([11, 28, 319])
    a.append([11, 29, 289])
    a.append([11, 30, 179])
    a.append([11, 31, 235])
    a.append([11, 32, 184])
    a.append([11, 33, 275])
    a.append([11, 34, 156])
    a.append([11, 35, 288])
    a.append([11, 36, 236])
    a.append([12, 13, 64])
    a.append([12, 14, 86])
    a.append([12, 15, 134])
    a.append([12, 16, 85])
    a.append([12, 17, 63])
    a.append([12, 18, 90])
    a.append([12, 19, 93])
    a.append([12, 20, 93])
    a.append([12, 21, 60])
    a.append([12, 22, 128])
    a.append([12, 23, 136])
    a.append([12, 24, 120])
    a.append([12, 25, 89])
    a.append([12, 26, 67])
    a.append([12, 27, 191])
    a.append([12, 28, 236])
    a.append([12, 29, 330])
    a.append([12, 30, 349])
    a.append([12, 31, 290])
    a.append([12, 32, 308])
    a.append([12, 33, 325])
    a.append([12, 34, 168])
    a.append([12, 35, 174])
    a.append([12, 36, 263])
    a.append([13, 14, 90])
    a.append([13, 15, 125])
    a.append([13, 16, 99])
    a.append([13, 17, 111])
    a.append([13, 18, 142])
    a.append([13, 19, 108])
    a.append([13, 20, 108])
    a.append([13, 21, 141])
    a.append([13, 22, 143])
    a.append([13, 23, 125])
    a.append([13, 24, 60])
    a.append([13, 25, 118])
    a.append([13, 26, 82])
    a.append([13, 27, 138])
    a.append([13, 28, 175])
    a.append([13, 29, 228])
    a.append([13, 30, 199])
    a.append([13, 31, 292])
    a.append([13, 32, 297])
    a.append([13, 33, 204])
    a.append([13, 34, 157])
    a.append([13, 35, 291])
    a.append([13, 36, 240])
    a.append([14, 15, 104])
    a.append([14, 16, 112])
    a.append([14, 17, 94])
    a.append([14, 18, 129])
    a.append([14, 19, 136])
    a.append([14, 20, 140])
    a.append([14, 21, 94])
    a.append([14, 22, 106])
    a.append([14, 23, 144])
    a.append([14, 24, 88])
    a.append([14, 25, 121])
    a.append([14, 26, 71])
    a.append([14, 27, 133])
    a.append([14, 28, 68])
    a.append([14, 29, 159])
    a.append([14, 30, 242])
    a.append([14, 31, 315])
    a.append([14, 32, 289])
    a.append([14, 33, 258])
    a.append([14, 34, 252])
    a.append([14, 35, 167])
    a.append([14, 36, 298])
    a.append([15, 16, 140])
    a.append([15, 17, 142])
    a.append([15, 18, 73])
    a.append([15, 19, 74])
    a.append([15, 20, 104])
    a.append([15, 21, 94])
    a.append([15, 22, 71])
    a.append([15, 23, 139])
    a.append([15, 24, 133])
    a.append([15, 25, 127])
    a.append([15, 26, 52])
    a.append([15, 27, 83])
    a.append([15, 28, 111])
    a.append([15, 29, 86])
    a.append([15, 30, 219])
    a.append([15, 31, 214])
    a.append([15, 32, 215])
    a.append([15, 33, 291])
    a.append([15, 34, 180])
    a.append([15, 35, 325])
    a.append([15, 36, 183])
    a.append([16, 17, 76])
    a.append([16, 18, 73])
    a.append([16, 19, 93])
    a.append([16, 20, 115])
    a.append([16, 21, 133])
    a.append([16, 22, 111])
    a.append([16, 23, 122])
    a.append([16, 24, 112])
    a.append([16, 25, 107])
    a.append([16, 26, 128])
    a.append([16, 27, 55])
    a.append([16, 28, 98])
    a.append([16, 29, 133])
    a.append([16, 30, 113])
    a.append([16, 31, 152])
    a.append([16, 32, 288])
    a.append([16, 33, 150])
    a.append([16, 34, 293])
    a.append([16, 35, 264])
    a.append([16, 36, 206])
    a.append([17, 18, 149])
    a.append([17, 19, 87])
    a.append([17, 20, 86])
    a.append([17, 21, 95])
    a.append([17, 22, 113])
    a.append([17, 23, 89])
    a.append([17, 24, 89])
    a.append([17, 25, 59])
    a.append([17, 26, 143])
    a.append([17, 27, 76])
    a.append([17, 28, 82])
    a.append([17, 29, 112])
    a.append([17, 30, 75])
    a.append([17, 31, 134])
    a.append([17, 32, 249])
    a.append([17, 33, 257])
    a.append([17, 34, 341])
    a.append([17, 35, 327])
    a.append([17, 36, 162])
    a.append([18, 19, 137])
    a.append([18, 20, 81])
    a.append([18, 21, 82])
    a.append([18, 22, 99])
    a.append([18, 23, 76])
    a.append([18, 24, 60])
    a.append([18, 25, 120])
    a.append([18, 26, 101])
    a.append([18, 27, 53])
    a.append([18, 28, 84])
    a.append([18, 29, 55])
    a.append([18, 30, 65])
    a.append([18, 31, 64])
    a.append([18, 32, 76])
    a.append([18, 33, 339])
    a.append([18, 34, 298])
    a.append([18, 35, 252])
    a.append([18, 36, 317])
    a.append([19, 20, 143])
    a.append([19, 21, 79])
    a.append([19, 22, 142])
    a.append([19, 23, 77])
    a.append([19, 24, 66])
    a.append([19, 25, 96])
    a.append([19, 26, 65])
    a.append([19, 27, 70])
    a.append([19, 28, 95])
    a.append([19, 29, 60])
    a.append([19, 30, 93])
    a.append([19, 31, 139])
    a.append([19, 32, 148])
    a.append([19, 33, 111])
    a.append([19, 34, 260])
    a.append([19, 35, 169])
    a.append([19, 36, 340])
    a.append([20, 21, 85])
    a.append([20, 22, 109])
    a.append([20, 23, 90])
    a.append([20, 24, 78])
    a.append([20, 25, 57])
    a.append([20, 26, 130])
    a.append([20, 27, 65])
    a.append([20, 28, 129])
    a.append([20, 29, 89])
    a.append([20, 30, 128])
    a.append([20, 31, 137])
    a.append([20, 32, 59])
    a.append([20, 33, 87])
    a.append([20, 34, 89])
    a.append([20, 35, 244])
    a.append([20, 36, 295])
    a.append([21, 22, 74])
    a.append([21, 23, 99])
    a.append([21, 24, 61])
    a.append([21, 25, 84])
    a.append([21, 26, 129])
    a.append([21, 27, 82])
    a.append([21, 28, 133])
    a.append([21, 29, 84])
    a.append([21, 30, 122])
    a.append([21, 31, 68])
    a.append([21, 32, 70])
    a.append([21, 33, 80])
    a.append([21, 34, 143])
    a.append([21, 35, 107])
    a.append([21, 36, 313])
    a.append([22, 23, 66])
    a.append([22, 24, 71])
    a.append([22, 25, 109])
    a.append([22, 26, 99])
    a.append([22, 27, 50])
    a.append([22, 28, 91])
    a.append([22, 29, 82])
    a.append([22, 30, 117])
    a.append([22, 31, 59])
    a.append([22, 32, 106])
    a.append([22, 33, 78])
    a.append([22, 34, 141])
    a.append([22, 35, 109])
    a.append([22, 36, 92])
    a.append([23, 24, 114])
    a.append([23, 25, 119])
    a.append([23, 26, 135])
    a.append([23, 27, 70])
    a.append([23, 28, 103])
    a.append([23, 29, 64])
    a.append([23, 30, 69])
    a.append([23, 31, 145])
    a.append([23, 32, 100])
    a.append([23, 33, 65])
    a.append([23, 34, 107])
    a.append([23, 35, 84])
    a.append([23, 36, 141])
    a.append([24, 25, 125])
    a.append([24, 26, 121])
    a.append([24, 27, 76])
    a.append([24, 28, 102])
    a.append([24, 29, 60])
    a.append([24, 30, 56])
    a.append([24, 31, 133])
    a.append([24, 32, 97])
    a.append([24, 33, 68])
    a.append([24, 34, 64])
    a.append([24, 35, 80])
    a.append([24, 36, 81])
    a.append([25, 26, 64])
    a.append([25, 27, 118])
    a.append([25, 28, 109])
    a.append([25, 29, 144])
    a.append([25, 30, 80])
    a.append([25, 31, 85])
    a.append([25, 32, 138])
    a.append([25, 33, 140])
    a.append([25, 34, 60])
    a.append([25, 35, 66])
    a.append([25, 36, 112])
    a.append([26, 27, 53])
    a.append([26, 28, 134])
    a.append([26, 29, 55])
    a.append([26, 30, 59])
    a.append([26, 31, 83])
    a.append([26, 32, 89])
    a.append([26, 33, 136])
    a.append([26, 34, 115])
    a.append([26, 35, 82])
    a.append([26, 36, 119])
    a.append([27, 28, 95])
    a.append([27, 29, 143])
    a.append([27, 30, 66])
    a.append([27, 31, 143])
    a.append([27, 32, 114])
    a.append([27, 33, 115])
    a.append([27, 34, 124])
    a.append([27, 35, 137])
    a.append([27, 36, 104])
    a.append([28, 29, 65])
    a.append([28, 30, 93])
    a.append([28, 31, 111])
    a.append([28, 32, 68])
    a.append([28, 33, 91])
    a.append([28, 34, 85])
    a.append([28, 35, 132])
    a.append([28, 36, 112])
    a.append([29, 30, 87])
    a.append([29, 31, 70])
    a.append([29, 32, 83])
    a.append([29, 33, 111])
    a.append([29, 34, 139])
    a.append([29, 35, 90])
    a.append([29, 36, 107])
    a.append([30, 31, 65])
    a.append([30, 32, 109])
    a.append([30, 33, 93])
    a.append([30, 34, 98])
    a.append([30, 35, 95])
    a.append([30, 36, 108])
    a.append([31, 32, 60])
    a.append([31, 33, 138])
    a.append([31, 34, 85])
    a.append([31, 35, 144])
    a.append([31, 36, 61])
    a.append([32, 33, 86])
    a.append([32, 34, 146])
    a.append([32, 35, 133])
    a.append([32, 36, 136])
    a.append([33, 34, 131])
    a.append([33, 35, 129])
    a.append([33, 36, 79])
    a.append([34, 35, 113])
    a.append([34, 36, 114])
    a.append([35, 36, 74])

    return a
def datosCosto():
    a=[]
    a.append([1, 2, 61])
    a.append([1, 3, 57])
    a.append([1, 4, 67])
    a.append([1, 5, 55])
    a.append([1, 6, 58])
    a.append([1, 7, 58])
    a.append([1, 8, 49])
    a.append([1, 9, 49])
    a.append([1, 10, 63])
    a.append([1, 11, 68])
    a.append([1, 12, 69])
    a.append([1, 13, 62])
    a.append([1, 14, 47])
    a.append([1, 15, 69])
    a.append([1, 16, 118])
    a.append([1, 17, 148])
    a.append([1, 18, 86])
    a.append([1, 19, 109])
    a.append([1, 20, 75])
    a.append([1, 21, 149])
    a.append([1, 22, 88])
    a.append([1, 23, 93])
    a.append([1, 24, 121])
    a.append([1, 25, 81])
    a.append([1, 26, 117])
    a.append([1, 27, 125])
    a.append([1, 28, 104])
    a.append([1, 29, 142])
    a.append([1, 30, 98])
    a.append([1, 31, 74])
    a.append([1, 32, 114])
    a.append([1, 33, 99])
    a.append([1, 34, 83])
    a.append([1, 35, 148])
    a.append([1, 36, 150])
    a.append([2, 3, 58])
    a.append([2, 4, 69])
    a.append([2, 5, 48])
    a.append([2, 6, 60])
    a.append([2, 7, 45])
    a.append([2, 8, 62])
    a.append([2, 9, 59])
    a.append([2, 10, 47])
    a.append([2, 11, 65])
    a.append([2, 12, 59])
    a.append([2, 13, 45])
    a.append([2, 14, 69])
    a.append([2, 15, 57])
    a.append([2, 16, 63])
    a.append([2, 17, 127])
    a.append([2, 18, 70])
    a.append([2, 19, 89])
    a.append([2, 20, 148])
    a.append([2, 21, 146])
    a.append([2, 22, 73])
    a.append([2, 23, 111])
    a.append([2, 24, 117])
    a.append([2, 25, 79])
    a.append([2, 26, 71])
    a.append([2, 27, 127])
    a.append([2, 28, 107])
    a.append([2, 29, 115])
    a.append([2, 30, 145])
    a.append([2, 31, 77])
    a.append([2, 32, 111])
    a.append([2, 33, 128])
    a.append([2, 34, 81])
    a.append([2, 35, 86])
    a.append([2, 36, 131])
    a.append([3, 4, 67])
    a.append([3, 5, 65])
    a.append([3, 6, 63])
    a.append([3, 7, 63])
    a.append([3, 8, 45])
    a.append([3, 9, 61])
    a.append([3, 10, 53])
    a.append([3, 11, 58])
    a.append([3, 12, 55])
    a.append([3, 13, 61])
    a.append([3, 14, 68])
    a.append([3, 15, 63])
    a.append([3, 16, 67])
    a.append([3, 17, 66])
    a.append([3, 18, 93])
    a.append([3, 19, 145])
    a.append([3, 20, 105])
    a.append([3, 21, 123])
    a.append([3, 22, 115])
    a.append([3, 23, 122])
    a.append([3, 24, 90])
    a.append([3, 25, 136])
    a.append([3, 26, 75])
    a.append([3, 27, 71])
    a.append([3, 28, 81])
    a.append([3, 29, 70])
    a.append([3, 30, 130])
    a.append([3, 31, 147])
    a.append([3, 32, 83])
    a.append([3, 33, 123])
    a.append([3, 34, 112])
    a.append([3, 35, 86])
    a.append([3, 36, 131])
    a.append([4, 5, 64])
    a.append([4, 6, 53])
    a.append([4, 7, 46])
    a.append([4, 8, 65])
    a.append([4, 9, 64])
    a.append([4, 10, 58])
    a.append([4, 11, 51])
    a.append([4, 12, 55])
    a.append([4, 13, 51])
    a.append([4, 14, 69])
    a.append([4, 15, 45])
    a.append([4, 16, 62])
    a.append([4, 17, 68])
    a.append([4, 18, 51])
    a.append([4, 19, 103])
    a.append([4, 20, 121])
    a.append([4, 21, 117])
    a.append([4, 22, 97])
    a.append([4, 23, 72])
    a.append([4, 24, 131])
    a.append([4, 25, 146])
    a.append([4, 26, 91])
    a.append([4, 27, 122])
    a.append([4, 28, 141])
    a.append([4, 29, 88])
    a.append([4, 30, 125])
    a.append([4, 31, 80])
    a.append([4, 32, 118])
    a.append([4, 33, 103])
    a.append([4, 34, 150])
    a.append([4, 35, 112])
    a.append([4, 36, 98])
    a.append([5, 6, 63])
    a.append([5, 7, 46])
    a.append([5, 8, 56])
    a.append([5, 9, 64])
    a.append([5, 10, 55])
    a.append([5, 11, 61])
    a.append([5, 12, 67])
    a.append([5, 13, 49])
    a.append([5, 14, 59])
    a.append([5, 15, 66])
    a.append([5, 16, 66])
    a.append([5, 17, 52])
    a.append([5, 18, 63])
    a.append([5, 19, 45])
    a.append([5, 20, 91])
    a.append([5, 21, 104])
    a.append([5, 22, 86])
    a.append([5, 23, 110])
    a.append([5, 24, 71])
    a.append([5, 25, 122])
    a.append([5, 26, 141])
    a.append([5, 27, 89])
    a.append([5, 28, 99])
    a.append([5, 29, 134])
    a.append([5, 30, 146])
    a.append([5, 31, 111])
    a.append([5, 32, 92])
    a.append([5, 33, 78])
    a.append([5, 34, 74])
    a.append([5, 35, 76])
    a.append([5, 36, 86])
    a.append([6, 7, 57])
    a.append([6, 8, 52])
    a.append([6, 9, 69])
    a.append([6, 10, 69])
    a.append([6, 11, 52])
    a.append([6, 12, 54])
    a.append([6, 13, 56])
    a.append([6, 14, 55])
    a.append([6, 15, 57])
    a.append([6, 16, 56])
    a.append([6, 17, 69])
    a.append([6, 18, 47])
    a.append([6, 19, 47])
    a.append([6, 20, 54])
    a.append([6, 21, 101])
    a.append([6, 22, 81])
    a.append([6, 23, 135])
    a.append([6, 24, 92])
    a.append([6, 25, 112])
    a.append([6, 26, 100])
    a.append([6, 27, 105])
    a.append([6, 28, 97])
    a.append([6, 29, 137])
    a.append([6, 30, 135])
    a.append([6, 31, 82])
    a.append([6, 32, 123])
    a.append([6, 33, 146])
    a.append([6, 34, 82])
    a.append([6, 35, 87])
    a.append([6, 36, 90])
    a.append([7, 8, 54])
    a.append([7, 9, 63])
    a.append([7, 10, 61])
    a.append([7, 11, 62])
    a.append([7, 12, 65])
    a.append([7, 13, 61])
    a.append([7, 14, 61])
    a.append([7, 15, 54])
    a.append([7, 16, 56])
    a.append([7, 17, 60])
    a.append([7, 18, 47])
    a.append([7, 19, 64])
    a.append([7, 20, 56])
    a.append([7, 21, 60])
    a.append([7, 22, 87])
    a.append([7, 23, 101])
    a.append([7, 24, 129])
    a.append([7, 25, 87])
    a.append([7, 26, 130])
    a.append([7, 27, 99])
    a.append([7, 28, 77])
    a.append([7, 29, 99])
    a.append([7, 30, 89])
    a.append([7, 31, 92])
    a.append([7, 32, 118])
    a.append([7, 33, 148])
    a.append([7, 34, 100])
    a.append([7, 35, 117])
    a.append([7, 36, 104])
    a.append([8, 9, 66])
    a.append([8, 10, 46])
    a.append([8, 11, 48])
    a.append([8, 12, 54])
    a.append([8, 13, 68])
    a.append([8, 14, 55])
    a.append([8, 15, 66])
    a.append([8, 16, 56])
    a.append([8, 17, 56])
    a.append([8, 18, 62])
    a.append([8, 19, 57])
    a.append([8, 20, 59])
    a.append([8, 21, 53])
    a.append([8, 22, 65])
    a.append([8, 23, 125])
    a.append([8, 24, 133])
    a.append([8, 25, 88])
    a.append([8, 26, 114])
    a.append([8, 27, 88])
    a.append([8, 28, 104])
    a.append([8, 29, 88])
    a.append([8, 30, 109])
    a.append([8, 31, 133])
    a.append([8, 32, 85])
    a.append([8, 33, 114])
    a.append([8, 34, 99])
    a.append([8, 35, 81])
    a.append([8, 36, 95])
    a.append([9, 10, 51])
    a.append([9, 11, 67])
    a.append([9, 12, 65])
    a.append([9, 13, 49])
    a.append([9, 14, 50])
    a.append([9, 15, 46])
    a.append([9, 16, 49])
    a.append([9, 17, 64])
    a.append([9, 18, 61])
    a.append([9, 19, 64])
    a.append([9, 20, 60])
    a.append([9, 21, 69])
    a.append([9, 22, 66])
    a.append([9, 23, 56])
    a.append([9, 24, 74])
    a.append([9, 25, 88])
    a.append([9, 26, 73])
    a.append([9, 27, 110])
    a.append([9, 28, 72])
    a.append([9, 29, 78])
    a.append([9, 30, 110])
    a.append([9, 31, 138])
    a.append([9, 32, 139])
    a.append([9, 33, 141])
    a.append([9, 34, 146])
    a.append([9, 35, 126])
    a.append([9, 36, 119])
    a.append([10, 11, 69])
    a.append([10, 12, 55])
    a.append([10, 13, 45])
    a.append([10, 14, 52])
    a.append([10, 15, 57])
    a.append([10, 16, 50])
    a.append([10, 17, 54])
    a.append([10, 18, 67])
    a.append([10, 19, 58])
    a.append([10, 20, 48])
    a.append([10, 21, 59])
    a.append([10, 22, 50])
    a.append([10, 23, 66])
    a.append([10, 24, 47])
    a.append([10, 25, 129])
    a.append([10, 26, 114])
    a.append([10, 27, 71])
    a.append([10, 28, 105])
    a.append([10, 29, 78])
    a.append([10, 30, 101])
    a.append([10, 31, 119])
    a.append([10, 32, 88])
    a.append([10, 33, 93])
    a.append([10, 34, 91])
    a.append([10, 35, 136])
    a.append([10, 36, 125])
    a.append([11, 12, 50])
    a.append([11, 13, 66])
    a.append([11, 14, 48])
    a.append([11, 15, 49])
    a.append([11, 16, 52])
    a.append([11, 17, 66])
    a.append([11, 18, 68])
    a.append([11, 19, 64])
    a.append([11, 20, 49])
    a.append([11, 21, 63])
    a.append([11, 22, 67])
    a.append([11, 23, 46])
    a.append([11, 24, 69])
    a.append([11, 25, 47])
    a.append([11, 26, 118])
    a.append([11, 27, 95])
    a.append([11, 28, 78])
    a.append([11, 29, 70])
    a.append([11, 30, 75])
    a.append([11, 31, 120])
    a.append([11, 32, 122])
    a.append([11, 33, 96])
    a.append([11, 34, 141])
    a.append([11, 35, 89])
    a.append([11, 36, 83])
    a.append([12, 13, 46])
    a.append([12, 14, 57])
    a.append([12, 15, 58])
    a.append([12, 16, 50])
    a.append([12, 17, 49])
    a.append([12, 18, 63])
    a.append([12, 19, 56])
    a.append([12, 20, 55])
    a.append([12, 21, 48])
    a.append([12, 22, 68])
    a.append([12, 23, 69])
    a.append([12, 24, 55])
    a.append([12, 25, 45])
    a.append([12, 26, 65])
    a.append([12, 27, 71])
    a.append([12, 28, 82])
    a.append([12, 29, 98])
    a.append([12, 30, 117])
    a.append([12, 31, 149])
    a.append([12, 32, 77])
    a.append([12, 33, 147])
    a.append([12, 34, 141])
    a.append([12, 35, 133])
    a.append([12, 36, 101])
    a.append([13, 14, 57])
    a.append([13, 15, 47])
    a.append([13, 16, 45])
    a.append([13, 17, 45])
    a.append([13, 18, 68])
    a.append([13, 19, 55])
    a.append([13, 20, 56])
    a.append([13, 21, 47])
    a.append([13, 22, 69])
    a.append([13, 23, 55])
    a.append([13, 24, 59])
    a.append([13, 25, 47])
    a.append([13, 26, 51])
    a.append([13, 27, 63])
    a.append([13, 28, 86])
    a.append([13, 29, 122])
    a.append([13, 30, 120])
    a.append([13, 31, 107])
    a.append([13, 32, 141])
    a.append([13, 33, 96])
    a.append([13, 34, 72])
    a.append([13, 35, 105])
    a.append([13, 36, 92])
    a.append([14, 15, 61])
    a.append([14, 16, 54])
    a.append([14, 17, 50])
    a.append([14, 18, 46])
    a.append([14, 19, 56])
    a.append([14, 20, 51])
    a.append([14, 21, 66])
    a.append([14, 22, 59])
    a.append([14, 23, 65])
    a.append([14, 24, 66])
    a.append([14, 25, 61])
    a.append([14, 26, 66])
    a.append([14, 27, 66])
    a.append([14, 28, 66])
    a.append([14, 29, 85])
    a.append([14, 30, 141])
    a.append([14, 31, 107])
    a.append([14, 32, 128])
    a.append([14, 33, 104])
    a.append([14, 34, 108])
    a.append([14, 35, 123])
    a.append([14, 36, 101])
    a.append([15, 16, 54])
    a.append([15, 17, 62])
    a.append([15, 18, 62])
    a.append([15, 19, 54])
    a.append([15, 20, 58])
    a.append([15, 21, 55])
    a.append([15, 22, 50])
    a.append([15, 23, 55])
    a.append([15, 24, 64])
    a.append([15, 25, 45])
    a.append([15, 26, 60])
    a.append([15, 27, 48])
    a.append([15, 28, 66])
    a.append([15, 29, 51])
    a.append([15, 30, 121])
    a.append([15, 31, 125])
    a.append([15, 32, 119])
    a.append([15, 33, 112])
    a.append([15, 34, 72])
    a.append([15, 35, 99])
    a.append([15, 36, 123])
    a.append([16, 17, 65])
    a.append([16, 18, 53])
    a.append([16, 19, 62])
    a.append([16, 20, 68])
    a.append([16, 21, 50])
    a.append([16, 22, 58])
    a.append([16, 23, 68])
    a.append([16, 24, 49])
    a.append([16, 25, 52])
    a.append([16, 26, 64])
    a.append([16, 27, 52])
    a.append([16, 28, 49])
    a.append([16, 29, 49])
    a.append([16, 30, 50])
    a.append([16, 31, 115])
    a.append([16, 32, 81])
    a.append([16, 33, 75])
    a.append([16, 34, 140])
    a.append([16, 35, 73])
    a.append([16, 36, 120])
    a.append([17, 18, 55])
    a.append([17, 19, 55])
    a.append([17, 20, 64])
    a.append([17, 21, 54])
    a.append([17, 22, 46])
    a.append([17, 23, 61])
    a.append([17, 24, 68])
    a.append([17, 25, 65])
    a.append([17, 26, 49])
    a.append([17, 27, 56])
    a.append([17, 28, 51])
    a.append([17, 29, 58])
    a.append([17, 30, 45])
    a.append([17, 31, 51])
    a.append([17, 32, 87])
    a.append([17, 33, 98])
    a.append([17, 34, 117])
    a.append([17, 35, 145])
    a.append([17, 36, 95])
    a.append([18, 19, 49])
    a.append([18, 20, 54])
    a.append([18, 21, 50])
    a.append([18, 22, 57])
    a.append([18, 23, 45])
    a.append([18, 24, 68])
    a.append([18, 25, 46])
    a.append([18, 26, 56])
    a.append([18, 27, 51])
    a.append([18, 28, 51])
    a.append([18, 29, 50])
    a.append([18, 30, 53])
    a.append([18, 31, 51])
    a.append([18, 32, 54])
    a.append([18, 33, 79])
    a.append([18, 34, 125])
    a.append([18, 35, 118])
    a.append([18, 36, 145])
    a.append([19, 20, 67])
    a.append([19, 21, 57])
    a.append([19, 22, 61])
    a.append([19, 23, 66])
    a.append([19, 24, 53])
    a.append([19, 25, 52])
    a.append([19, 26, 69])
    a.append([19, 27, 59])
    a.append([19, 28, 50])
    a.append([19, 29, 58])
    a.append([19, 30, 49])
    a.append([19, 31, 48])
    a.append([19, 32, 68])
    a.append([19, 33, 66])
    a.append([19, 34, 141])
    a.append([19, 35, 92])
    a.append([19, 36, 93])
    a.append([20, 21, 48])
    a.append([20, 22, 67])
    a.append([20, 23, 62])
    a.append([20, 24, 48])
    a.append([20, 25, 55])
    a.append([20, 26, 64])
    a.append([20, 27, 50])
    a.append([20, 28, 62])
    a.append([20, 29, 65])
    a.append([20, 30, 69])
    a.append([20, 31, 50])
    a.append([20, 32, 46])
    a.append([20, 33, 46])
    a.append([20, 34, 67])
    a.append([20, 35, 145])
    a.append([20, 36, 146])
    a.append([21, 22, 69])
    a.append([21, 23, 51])
    a.append([21, 24, 54])
    a.append([21, 25, 54])
    a.append([21, 26, 48])
    a.append([21, 27, 49])
    a.append([21, 28, 52])
    a.append([21, 29, 56])
    a.append([21, 30, 58])
    a.append([21, 31, 66])
    a.append([21, 32, 46])
    a.append([21, 33, 48])
    a.append([21, 34, 66])
    a.append([21, 35, 62])
    a.append([21, 36, 115])
    a.append([22, 23, 46])
    a.append([22, 24, 46])
    a.append([22, 25, 55])
    a.append([22, 26, 58])
    a.append([22, 27, 61])
    a.append([22, 28, 60])
    a.append([22, 29, 68])
    a.append([22, 30, 55])
    a.append([22, 31, 54])
    a.append([22, 32, 61])
    a.append([22, 33, 64])
    a.append([22, 34, 56])
    a.append([22, 35, 51])
    a.append([22, 36, 52])
    a.append([23, 24, 68])
    a.append([23, 25, 67])
    a.append([23, 26, 50])
    a.append([23, 27, 61])
    a.append([23, 28, 53])
    a.append([23, 29, 48])
    a.append([23, 30, 64])
    a.append([23, 31, 55])
    a.append([23, 32, 50])
    a.append([23, 33, 57])
    a.append([23, 34, 69])
    a.append([23, 35, 62])
    a.append([23, 36, 58])
    a.append([24, 25, 51])
    a.append([24, 26, 63])
    a.append([24, 27, 58])
    a.append([24, 28, 46])
    a.append([24, 29, 65])
    a.append([24, 30, 58])
    a.append([24, 31, 49])
    a.append([24, 32, 67])
    a.append([24, 33, 69])
    a.append([24, 34, 65])
    a.append([24, 35, 52])
    a.append([24, 36, 50])
    a.append([25, 26, 60])
    a.append([25, 27, 51])
    a.append([25, 28, 51])
    a.append([25, 29, 49])
    a.append([25, 30, 46])
    a.append([25, 31, 65])
    a.append([25, 32, 62])
    a.append([25, 33, 45])
    a.append([25, 34, 50])
    a.append([25, 35, 45])
    a.append([25, 36, 52])
    a.append([26, 27, 53])
    a.append([26, 28, 48])
    a.append([26, 29, 50])
    a.append([26, 30, 60])
    a.append([26, 31, 61])
    a.append([26, 32, 64])
    a.append([26, 33, 64])
    a.append([26, 34, 49])
    a.append([26, 35, 53])
    a.append([26, 36, 56])
    a.append([27, 28, 51])
    a.append([27, 29, 48])
    a.append([27, 30, 56])
    a.append([27, 31, 55])
    a.append([27, 32, 52])
    a.append([27, 33, 59])
    a.append([27, 34, 59])
    a.append([27, 35, 54])
    a.append([27, 36, 60])
    a.append([28, 29, 52])
    a.append([28, 30, 62])
    a.append([28, 31, 53])
    a.append([28, 32, 63])
    a.append([28, 33, 58])
    a.append([28, 34, 69])
    a.append([28, 35, 47])
    a.append([28, 36, 57])
    a.append([29, 30, 60])
    a.append([29, 31, 55])
    a.append([29, 32, 60])
    a.append([29, 33, 54])
    a.append([29, 34, 58])
    a.append([29, 35, 58])
    a.append([29, 36, 47])
    a.append([30, 31, 53])
    a.append([30, 32, 55])
    a.append([30, 33, 51])
    a.append([30, 34, 69])
    a.append([30, 35, 68])
    a.append([30, 36, 62])
    a.append([31, 32, 69])
    a.append([31, 33, 47])
    a.append([31, 34, 47])
    a.append([31, 35, 60])
    a.append([31, 36, 64])
    a.append([32, 33, 57])
    a.append([32, 34, 56])
    a.append([32, 35, 63])
    a.append([32, 36, 45])
    a.append([33, 34, 49])
    a.append([33, 35, 54])
    a.append([33, 36, 58])
    a.append([34, 35, 59])
    a.append([34, 36, 62])
    a.append([35, 36, 46])
    return a
def nombresCiudades():
    b=[] #nombres de aeropuertos
    b.append("Portugal")
    b.append("EspaÃ±a")
    b.append("Francia")
    b.append("Suiza")
    b.append("Italia")
    b.append("Belgica")
    b.append("Holanda")
    b.append("Irlanda")
    b.append("Reino Unido")
    b.append("Dinamarca")
    b.append("Alemania")
    b.append("Austria")
    b.append("Eslovenia")
    b.append("Croacia")
    b.append("Bosnia")
    b.append("Montenegro")
    b.append("Albania")
    b.append("Grecia")
    b.append("Macedonia")
    b.append("Serbia")
    b.append("Hungria")
    b.append("Eslovaquia")
    b.append("Republica Checa")
    b.append("Bulgaria")
    b.append("Noruega")
    b.append("Suecia")
    b.append("Rumania")
    b.append("Moldavia")
    b.append("Polonia")
    b.append("Ucrania")
    b.append("Bielorrusia")
    b.append("Lituania")
    b.append("Letonia")
    b.append("Lituania")
    b.append("Estonia")
    b.append("Finlandia")
    return b
def buscarNombre(x):
    b=nombresCiudades()
    return b[x-1]
def help():
   print("----------- Sistema de Sugerencias Para Vuelos Europeos -----------")
   print("Desarrolado por:")
   print("David Vasquez")
   print("Adriana Villamizar")
   print("Rubi Utima")
   print("-------------------------------------------------------------------")
   print("Version: 1.0")
   print("-------------------------------------------------------------------\n")

def pedirNumeroEntero():
 
    correcto=False
    num=0 
    
    while(not correcto):
        try:
            num = int(input("Elige una OpciÃ³n: "))
            correcto=True
        except ValueError:
            print('Error, introduce un numero entero')
    return num

def menu1(Graph, Graph_Costo, d):

    salir = False
    opcion = 0
    i=0
    while not salir:
       
        

        
        print("-")
        if(i==80):
            os.system("pause")
            i+=1
        os.system("cls")
        print("----------- Sistema de Sugerencias Para Vuelos Europeos -----------")
        print("1. Buscar vuelo con duraciÃ³n minima:")
        print("2. Buscar vuelo con costo minimo:")
        print("3. Plan para viajar por toda europa de la forma mas economica:")
        print("4. Mostrar paÃ­ses disponibles:")
        print("-------------------------------------------------------------------")
        print("5. InformaciÃ³n:")
        print("-------------------------------------------------------------------")
        print("6. Salir:\n")
    
 
        opcion = pedirNumeroEntero()
 
        if opcion == 1:
           source=-1
           print("Ingreso Aeropuerto de Partida")
           while(source==-1):
                 source=devuelveIndice(input())
                 if(source!=-1):                  
                    print("")
                 else:
                        print("No se encontrÃ³ el Aeropuerto, Vuelva a ingresarlo: ")
           destination=-1
           print("Ingreso Aeropuerto de Llegada")
           while(destination==-1):
               destination=devuelveIndice(input())
               if(destination!=-1):
                    print("")
               else:
                      print("No se encontrÃ³ el Aeropuerto, Vuelva a ingresarlo: ")
    
           print("El viaje tardarÃ¡", dijkstra(Graph, source, destination), "m")
           time.sleep(2)
           os.system("pause")
           time.sleep(2)
           os.system("cls")
        elif opcion == 2:
           source=-1
           print("Ingreso Aeropuerto de Partida")
           while(source==-1):
                 source=devuelveIndice(input())
                 if(source!=-1):                  
                    print("")
                 else:
                        print("No se encontrÃ³ el Aeropuerto, Vuelva a ingresarlo: ")
           destination=-1
           print("Ingreso Aeropuerto de Llegada")
           while(destination==-1):
               destination=devuelveIndice(input())
               if(destination!=-1):
                    print("")
               else:
                      print("No se encontrÃ³ el Aeropuerto, Vuelva a ingresarlo: ")
    
           print("El viaje costarÃ¡", dijkstra(Graph_Costo, source, destination), "Euros")
           time.sleep(2)
           os.system("pause")
           time.sleep(2)
           os.system("cls")
        elif opcion == 3:
           recorridocompleto(d)
           i=80
        elif opcion == 4:
            print("")
            nombraTodos()
            time.sleep(2)
            os.system("pause")
            time.sleep(2)
            os.system("cls")

        elif opcion == 5:
           help()
           time.sleep(2)
           os.system("pause")
           time.sleep(2)
           os.system("cls")
        elif opcion == 6:
            print("Esperamos que nuestra aplicaciÃ³n haya sido util para usted.")
            print("Hasta la proxima.")

            salir = True
        else:
            print ("Introduce un numero entre 1 y 6")
 

def nombraTodos():
    x=nombresCiudades()
    for i in range(len(x)):
        print(i+1,x[i])

def devuelveIndice(nombre):
    x=nombresCiudades()
    v=False
    for i in range(len(x)):
        if(nombre==x[i]):
            v=True
            indice=i+1
    if(v==False):
        return -1
    else:
        return indice
        
     


if __name__ == "__main__":
    a = datosTiempo()
    b = datosCosto()

    Node = 36
    Edge = len(a) 
    Graph = [[] for i in range(Node + 1)]  
    for i in range(0, Edge):
        u, v, w = a[i] 
        Graph[u].append((v, w)) 
        Graph[v].append((u, w)) 
    Graph_Costo =[[] for i in range(Node + 1)]
    for j in range(0, Edge):
        u, v, w = b[j]
        Graph_Costo[u].append((v, w))
        Graph_Costo[v].append((u, w))
   
    print("\n")
    d=matriz_adjacencia(Graph )
    menu1(Graph, Graph_Costo, d)
    
    #MasComun(Graph, cant)
